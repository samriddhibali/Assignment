{"ast":null,"code":"var _jsxFileName = \"/Users/samriddhi.bali/Desktop/assignment/src/ToDoApp/ToDoApp.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addTask, deleteTask, editTask, completeTask } from './ActionCreator.js';\nimport './ToDoApp.css';\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state\n  };\n};\n\nclass ToDoApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.handleSave = () => {\n      const text = this.state.inputValue;\n\n      if (this.state.id !== null) {\n        this.props.dispatch(editTask(parseInt(this.state.id), text));\n      } else {\n        this.props.dispatch(addTask(text));\n      }\n\n      this.setState({\n        inputValue: '',\n        id: null\n      });\n    };\n\n    this.handleDeleteTask = id => {\n      this.props.dispatch(deleteTask(id));\n    };\n\n    this.handleEditTask = (id, text) => {\n      document.getElementById('inputTask').focus();\n      this.setState({\n        inputValue: text,\n        id: id\n      });\n    };\n\n    this.handleCompleteTask = (e, id) => {\n      console.log(e.target.checked);\n      this.props.dispatch(completeTask(id, e.target.checked));\n    };\n\n    this.state = {\n      inputValue: '',\n      id: null\n    };\n  }\n\n  render() {\n    let totalLength = this.props.tasks.length;\n    let completedLength = this.props.tasks.filter(task => task.complete === true).length;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todoDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \"To-Do App\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, totalLength < 1 ? `Total Tasks: ${totalLength}` : `Total Tasks: ${totalLength}`), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, completedLength < 1 ? `Completed Tasks: ${completedLength}` : `Completed Tasks: ${completedLength}`), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"inputTask\",\n      type: \"text\",\n      value: this.state.inputValue,\n      placeholder: \"Enter new task\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"saveButton\",\n      onClick: this.handleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, this.props.tasks && this.props.tasks.map((task, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 36\n        }\n      }, task.text, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.handleEditTask(task.id, task.text),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }\n      }, \"Edit Task\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.handleDeleteTask(task.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }\n      }, \"Delete Task\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        onChange: e => this.handleCompleteTask(e, task.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 113\n        }\n      }, \"Complete Task\"));\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps)(ToDoApp);","map":{"version":3,"sources":["/Users/samriddhi.bali/Desktop/assignment/src/ToDoApp/ToDoApp.js"],"names":["React","connect","addTask","deleteTask","editTask","completeTask","mapStateToProps","state","tasks","ToDoApp","Component","constructor","props","handleChange","e","setState","inputValue","target","value","handleSave","text","id","dispatch","parseInt","handleDeleteTask","handleEditTask","document","getElementById","focus","handleCompleteTask","console","log","checked","render","totalLength","length","completedLength","filter","task","complete","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { addTask, deleteTask, editTask, completeTask } from './ActionCreator.js'\nimport './ToDoApp.css';\n\nconst mapStateToProps = state =>{\n    return {tasks: state}\n}\n\nclass ToDoApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputValue: '',\n            id: null\n        };\n    }\n\n    handleChange = e => {\n        this.setState({\n            inputValue: e.target.value,\n        })\n    }\n    handleSave = () => {\n        const text = this.state.inputValue;\n        if (this.state.id !== null) {\n            this.props.dispatch(editTask(\n                parseInt(this.state.id),\n                text\n            ))\n        }\n        else {\n            this.props.dispatch(addTask(text))\n        }\n        this.setState({\n            inputValue: '',\n            id: null\n        })\n    }\n\n    handleDeleteTask = (id) => {\n        this.props.dispatch(deleteTask(id))\n    }\n\n    handleEditTask = (id, text) => {\n        document.getElementById('inputTask').focus();\n        this.setState({\n            inputValue: text,\n            id: id\n        })\n    }\n\n    handleCompleteTask = (e, id) => {\n        console.log(e.target.checked)\n        this.props.dispatch(completeTask(id, e.target.checked))\n    }\n\n    render() {\n        let totalLength = this.props.tasks.length;\n        let completedLength = this.props.tasks.filter((task) => task.complete === true).length;\n        return (\n            <div className=\"todoDiv\">\n                <h3>To-Do App</h3>\n                <div>\n                    { totalLength < 1 ? `Total Tasks: ${totalLength}`: `Total Tasks: ${totalLength}`}\n                </div>\n                <div>\n                    { completedLength < 1 ? `Completed Tasks: ${completedLength}`: `Completed Tasks: ${completedLength}`}\n                </div>\n                <br/>\n                <input id=\"inputTask\" type='text' value={this.state.inputValue} placeholder=\"Enter new task\" onChange={this.handleChange} />\n                <button id=\"saveButton\" onClick={this.handleSave}>Save</button>\n                <ul>\n                    {\n                        this.props.tasks && this.props.tasks.map((task, index) => {\n                            return <li key={index}>\n                                {task.text}\n                                <button onClick={() => this.handleEditTask(task.id, task.text)}>Edit Task</button>\n                                <button onClick={() => this.handleDeleteTask(task.id)}>Delete Task</button>\n                                <input type=\"checkbox\" onChange={(e) => this.handleCompleteTask(e, task.id)} /> <label>Complete Task</label>\n                            </li>\n                        })\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\nexport default connect(mapStateToProps)(ToDoApp);"]},"metadata":{},"sourceType":"module"}