{"ast":null,"code":"let newId = 0;\nexport const Reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TASK':\n      return [...state, {\n        id: newId++,\n        text: action.text,\n        complete: false\n      }];\n\n    case 'DELETE_TASK':\n      return state.filter(task => task.id !== action.id);\n\n    case 'EDIT_TASK':\n      state.map(task => {\n        if (task.id === action.id) task.text = action.text;\n      });\n      return [...state];\n\n    case 'COMPLETE_TASK':\n      state.map(task => {\n        if (task.id === action.id) task.complete = action.value;\n      });\n      return [...state];\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/samriddhi.bali/Downloads/Assignment/src/ToDoApp/Reducer.js"],"names":["newId","Reducer","state","action","type","id","text","complete","filter","task","map","value"],"mappings":"AAAA,IAAIA,KAAK,GAAG,CAAZ;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO,CAAC,GAAGF,KAAJ,EACP;AACIG,QAAAA,EAAE,EAAEL,KAAK,EADb;AAEIM,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFjB;AAGIC,QAAAA,QAAQ,EAAE;AAHd,OADO,CAAP;;AAOJ,SAAK,aAAL;AACI,aAAOL,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAAxC,CAAP;;AAEJ,SAAK,WAAL;AACIH,MAAAA,KAAK,CAACQ,GAAN,CAAWD,IAAD,IAAU;AAChB,YAAIA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAAvB,EACII,IAAI,CAACH,IAAL,GAAYH,MAAM,CAACG,IAAnB;AACP,OAHD;AAIA,aAAO,CAAC,GAAGJ,KAAJ,CAAP;;AAEJ,SAAK,eAAL;AACIA,MAAAA,KAAK,CAACQ,GAAN,CAAWD,IAAD,IAAU;AAChB,YAAIA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAAvB,EACII,IAAI,CAACF,QAAL,GAAgBJ,MAAM,CAACQ,KAAvB;AACP,OAHD;AAIA,aAAO,CAAC,GAAGT,KAAJ,CAAP;;AAEJ;AACI,aAAOA,KAAP;AA3BR;AA6BH,CA9BM","sourcesContent":["let newId = 0;\nexport const Reducer = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_TASK':\n            return [...state,\n            {\n                id: newId++,\n                text: action.text,\n                complete: false\n            }\n            ]\n        case 'DELETE_TASK':\n            return state.filter(task => task.id !== action.id)\n\n        case 'EDIT_TASK':\n            state.map((task) => {\n                if (task.id === action.id)\n                    task.text = action.text\n            })\n            return [...state]\n\n        case 'COMPLETE_TASK':\n            state.map((task) => {\n                if (task.id === action.id)\n                    task.complete = action.value\n            })\n            return [...state]\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}