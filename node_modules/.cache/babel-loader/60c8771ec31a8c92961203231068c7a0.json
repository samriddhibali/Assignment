{"ast":null,"code":"let newId = 0;\nexport const Reducer = (state = [], action) => {\n  console.log(\"reducer\", action);\n\n  switch (action.type) {\n    case 'ADD_TASK':\n      return [...state, {\n        id: newId++,\n        text: action.text,\n        complete: false\n      }];\n\n    case 'DELETE_TASK':\n      return state.filter(task => task.id !== action.id);\n\n    case 'EDIT_TASK':\n      state.map(task => {\n        if (task.id === action.id) task.text = action.text;\n      });\n      return [...state];\n\n    case 'COMPLETE_TASK':\n      state.map(task => {\n        if (task.id === action.id) task.complete = action.text;\n      });\n      return [...state];\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/samriddhi.bali/Desktop/assignment/src/ToDoApp/Reducer.js"],"names":["newId","Reducer","state","action","console","log","type","id","text","complete","filter","task","map"],"mappings":"AAAA,IAAIA,KAAK,GAAG,CAAZ;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;;AACA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAK,UAAL;AACI,aAAO,CAAE,GAAGJ,KAAL,EACH;AACEK,QAAAA,EAAE,EAAEP,KAAK,EADX;AAEEQ,QAAAA,IAAI,EAAEL,MAAM,CAACK,IAFf;AAGEC,QAAAA,QAAQ,EAAE;AAHZ,OADG,CAAP;;AAOJ,SAAK,aAAL;AACI,aAAOP,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYJ,MAAM,CAACI,EAAxC,CAAP;;AAEJ,SAAK,WAAL;AACIL,MAAAA,KAAK,CAACU,GAAN,CAAWD,IAAD,IAAU;AAChB,YAAGA,IAAI,CAACJ,EAAL,KAAYJ,MAAM,CAACI,EAAtB,EACII,IAAI,CAACH,IAAL,GAAYL,MAAM,CAACK,IAAnB;AACJ,OAHJ;AAIA,aAAO,CAAE,GAAGN,KAAL,CAAP;;AAEJ,SAAK,eAAL;AACIA,MAAAA,KAAK,CAACU,GAAN,CAAWD,IAAD,IAAU;AAChB,YAAGA,IAAI,CAACJ,EAAL,KAAYJ,MAAM,CAACI,EAAtB,EACII,IAAI,CAACF,QAAL,GAAgBN,MAAM,CAACK,IAAvB;AACH,OAHL;AAIA,aAAO,CAAE,GAAGN,KAAL,CAAP;;AAEJ;AACI,aAAOA,KAAP;AA3BR;AA6BH,CA/BM","sourcesContent":["let newId = 0;\nexport const Reducer = (state = [], action) => {\n    console.log(\"reducer\", action)\n    switch (action.type) {\n        case 'ADD_TASK':\n            return [ ...state,\n                {\n                  id: newId++,\n                  text: action.text,\n                  complete: false\n                }\n            ]\n        case 'DELETE_TASK':\n            return state.filter(task => task.id !== action.id)\n            \n        case 'EDIT_TASK':\n            state.map((task) => {\n                if(task.id === action.id )\n                    task.text = action.text \n               })\n            return [ ...state ]\n  \n        case 'COMPLETE_TASK':\n            state.map((task) => {\n                if(task.id === action.id )\n                    task.complete = action.text \n                })\n            return [ ...state ]\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}